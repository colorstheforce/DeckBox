package com.r0adkll.deckbuilder.arch.data.features.exporter.ptcgo

import com.r0adkll.deckbuilder.arch.domain.features.cards.model.PokemonCard
import com.r0adkll.deckbuilder.arch.domain.features.exporter.ptcgo.PtcgoExporter
import io.pokemontcg.model.SuperType
import io.reactivex.Observable

class DefaultPtcgoExporter : PtcgoExporter {

    override fun export(cards: List<PokemonCard>, name: String): Observable<String> {
        val pokemon = cards.filter { it.supertype == SuperType.POKEMON }
        val trainers = cards.filter { it.supertype == SuperType.TRAINER }
        val energy = cards.filter { it.supertype == SuperType.ENERGY }

        val listBuilder = StringBuilder()
        listBuilder
            .appendln("****** $name ******")
            .appendln()
            .appendln("##Pok√©mon - ${pokemon.size}")
            .appendln()

        val groupedPokemon = pokemon.groupBy { it.id }
        groupedPokemon.entries.forEach {
            val count = it.value.size
            val poke = it.value.first()
            listBuilder.appendln(serialize(count, poke))
        }

        listBuilder
            .appendln()
            .appendln("##Trainer Cards - ${trainers.size}")
            .appendln()

        val groupedTrainers = trainers.groupBy { it.id }
        groupedTrainers.entries.forEach {
            val count = it.value.size
            val trainer = it.value.first()
            listBuilder.appendln(serialize(count, trainer))
        }

        listBuilder
            .appendln()
            .appendln("##Energy - ${energy.size}")
            .appendln()

        val groupedEnergy = energy.groupBy { it.id }
        groupedEnergy.forEach {
            val count = it.value.count()
            val ener = it.value.first()
            listBuilder.appendln(serialize(count, ener))
        }

        listBuilder
            .appendln()
            .appendln("Total Cards - ${cards.size}")
            .appendln()
            .appendln("****** Deck List Generated by DeckBox ******")

        return Observable.just(listBuilder.toString())
    }

    private fun serialize(count: Int, card: PokemonCard): String {
        return "* $count ${card.name} ${card.expansion?.ptcgoCode ?: ""} ${card.number}"
    }
}
